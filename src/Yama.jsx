/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/Yama.glb
*/

import React, {useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useCharacterAnimations } from '../context/CharacterAnimations'

const Yama = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/Yama.glb')
  const {setAnimations,animationIndex} =useCharacterAnimations();
  const { actions,names } = useAnimations(animations, group)
  

// using useeffect and array index for animation 

useEffect(()=>{
  setAnimations(names);
},[names]);

  useEffect(()=>{ 
    actions[names[2]].reset().fadeIn(.5).play();
    return () => {
      actions[names[animationIndex]].fadeOut(.5);
    }
  },[animationIndex])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Yama" position={[13, 5, -7]} rotation={[Math.PI / 2, 0, 1.151]} scale={0.006}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Yama-Main_Body" geometry={nodes['Yama-Main_Body'].geometry} material={materials['Material.001']} skeleton={nodes['Yama-Main_Body'].skeleton} />
        </group>
      </group>
    </group>
  )
}
export default Yama
useGLTF.preload('/Yama.glb')